name: Docker Image CI

on:
  push:
    branches: [ "master" ]

jobs:

  build_test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file config/config-server/pom.xml




  publish-job:
    runs-on: ubuntu-latest
    needs: build_test
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - run: mvn --batch-mode --update-snapshots -f config/config-server/pom.xml verify
    - run: mkdir staging && cp config/config-server/target/*.jar staging
    - uses: actions/upload-artifact@v3
      with:
        name: Package
        path: staging


  dockerize:
    runs-on: ubuntu-latest
    needs: publish-job

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Download the JAR artifact
      - name: Download JAR Artifact
        uses: actions/download-artifact@v3
        with:
          name: Package
          path: staging

      # Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -t jovan99djokic/order-service:${{ github.sha }} .

      # Log in to Docker Hub
      - name: Docker Hub Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Push the Docker image to Docker Hub
      - name: Push Docker Image
        run: docker push jovan99djokic/order-service:${{ github.sha }}