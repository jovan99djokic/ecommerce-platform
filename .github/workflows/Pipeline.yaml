name: Docker Image CI

on:
  push:
    branches: [ "master" ]

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - config-server
          - ../discovery/eureka-server
          # Add other services as needed

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build and Verify with Maven
        run: |
          mvn -B package --file config/${{ matrix.service }}/pom.xml
          mvn --batch-mode --update-snapshots -f config/${{ matrix.service }}/pom.xml verify

      # Create a folder to store the JAR and configs for artifact upload
      - name: Prepare JAR and Configs for Docker
        run: |
          mkdir -p deploy_artifact_${{ matrix.service }}
          cp config/${{ matrix.service }}/target/${{ matrix.service }}-0.0.1-SNAPSHOT.jar deploy_artifact_${{ matrix.service }}/
          cp -R config/${{ matrix.service }}/configs deploy_artifact_${{ matrix.service }}/

      - name: Upload JAR and Configs as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.service }}-artifact
          path: deploy_artifact_${{ matrix.service }}



  dockerize:
    runs-on: ubuntu-latest
    needs: build_and_publish
    strategy:
      matrix:
        service:
          - config-server
          - ../discovery/eureka-server
          # Add other services as needed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.service }}-artifact
          path: deploy_artifact_${{ matrix.service }}

      # Create target directory and move the JAR and configs
      - name: Prepare Docker Build Context
        run: |
          mkdir -p target  # Ensure target directory exists
          mv deploy_artifact_${{ matrix.service }}/${{ matrix.service }}-0.0.1-SNAPSHOT.jar ./target/
          mv deploy_artifact_${{ matrix.service }}/configs .

      - name: List all files for debugging
        run: ls -R  # Lists all files to confirm configs and JAR placement

      # Build the Docker image with the root directory as context
      - name: Build Docker Image
        run: |
          docker build -t jovan99djokic/${{ matrix.service }}:latest -f config/${{ matrix.service }}/Dockerfile .

      - name: Docker Hub Login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: docker push jovan99djokic/${{ matrix.service }}:latest
