name: Docker Image CI

on:
  push:
    branches: [ "master" ]

jobs:
  build_and_publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build and Verify with Maven
        run: |
          mvn -B package --file config/config-server/pom.xml
          mvn --batch-mode --update-snapshots -f config/config-server/pom.xml verify

      # Create a folder to store the JAR and configs for artifact upload
      - name: Prepare JAR and Configs for Docker
        run: |
          mkdir -p deploy_artifact
          cp config/config-server/target/config-server-0.0.1-SNAPSHOT.jar deploy_artifact/
          cp -R config/config-server/configs deploy_artifact/

      - name: Upload JAR and Configs as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: config-server-artifact
          path: deploy_artifact



  dockerize:
    runs-on: ubuntu-latest
    needs: build_and_publish

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: config-server-artifact
          path: deploy_artifact

      # Create target directory and move the JAR and configs
      - name: Prepare Docker Build Context
        run: |
          mkdir -p target  # Ensure target directory exists
          mv deploy_artifact/config-server-0.0.1-SNAPSHOT.jar ./target/
          mv deploy_artifact/configs .

      - name: List all files for debugging
        run: ls -R  # Lists all files to confirm configs and JAR placement

      # Build the Docker image with the root directory as context
      - name: Build Docker Image
        run: |
          docker build -t jovan99djokic/config-server:latest -f config/config-server/Dockerfile .

      - name: Docker Hub Login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: docker push jovan99djokic/config-server:latest
